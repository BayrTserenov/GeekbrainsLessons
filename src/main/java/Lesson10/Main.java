/*

1. Написать метод, который меняет два элемента массива местами (массив может быть любого ссылочного типа);
2. Улыбнуться :)
3. Большая задача:

    Есть классы Fruit -> Apple, Orange (больше фруктов не надо);
    Класс Box, в который можно складывать фрукты. Коробки условно сортируются по типу фрукта, поэтому в одну коробку нельзя сложить и яблоки, и апельсины;
    Для хранения фруктов внутри коробки можно использовать ArrayList;
    Сделать метод getWeight(), который высчитывает вес коробки, зная количество фруктов и вес одного фрукта (вес яблока – 1.0f, апельсина – 1.5f. Не важно, в каких это единицах);
    Внутри класса Коробка сделать метод compare, который позволяет сравнить текущую коробку с той, которую подадут в compare в качестве параметра, true – если она равны по весу,
    false – в противном случае (коробки с яблоками мы можем сравнивать с коробками с апельсинами);
    Написать метод, который позволяет пересыпать фрукты из текущей коробки в другую (помним про сортировку фруктов: нельзя яблоки высыпать в коробку с апельсинами). Соответственно,
    в текущей коробке фруктов не остается, а в другую перекидываются объекты, которые были в этой коробке;
    Не забываем про метод добавления фрукта в коробку.

*/


package Lesson10;

import java.lang.reflect.Array;
import java.util.Arrays;

public class Main {
    public static String[] strings = new String[5];

    public static void main(String[] args) {


        // 1. Написать метод, который меняет два элемента массива местами (массив может быть любого ссылочного типа);

        for (int i = 0; i < strings.length; i++) {
            strings[i] = "v"+i;
        }
        System.out.println((Arrays.toString(strings)));
        switchElements(strings, 2, 3);
        System.out.println((Arrays.toString(strings)));

        // 2. Улыбнуться :)
        System.out.println(":-)");

        //3. Большая задача:
        //
        //    Есть классы Fruit -> Apple, Orange (больше фруктов не надо);
        //    Класс Box, в который можно складывать фрукты. Коробки условно сортируются по типу фрукта, поэтому в одну коробку нельзя сложить и яблоки, и апельсины;
        //    Для хранения фруктов внутри коробки можно использовать ArrayList;
        //    Сделать метод getWeight(), который высчитывает вес коробки, зная количество фруктов и вес одного фрукта (вес яблока – 1.0f, апельсина – 1.5f. Не важно, в каких это единицах);
        //    Внутри класса Коробка сделать метод compare, который позволяет сравнить текущую коробку с той, которую подадут в compare в качестве параметра, true – если она равны по весу,
        //    false – в противном случае (коробки с яблоками мы можем сравнивать с коробками с апельсинами);
        //    Написать метод, который позволяет пересыпать фрукты из текущей коробки в другую (помним про сортировку фруктов: нельзя яблоки высыпать в коробку с апельсинами). Соответственно,
        //    в текущей коробке фруктов не остается, а в другую перекидываются объекты, которые были в этой коробке;
        //    Не забываем про метод добавления фрукта в коробку.

        Box box1 = new Box("Коробка для Коли");
        box1.putFruit(new Apple());
        box1.putFruit(new Orange());


    }

    private static void switchElements(Object[] objects, int index1, int index2) {
        Object temp;
        temp = objects[index1];
        objects[index1] = objects[index2];
        objects[index2] = temp;
    }
}
